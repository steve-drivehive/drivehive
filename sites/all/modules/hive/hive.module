<?php
/*
 * Implementation of hook_page_build()
 */
function hive_page_build(&$page) {




}
/**
* Implementation of hook_page_alter()
*/
function hive_page_alter(&$page){

}

/**
* Implementation of hook_form_alter()
*/
function hive_form_alter(&$form, &$form_state, $form_id){
	global $user;
        switch($form_id){
            case stristr($form_id, 'commerce_cart_add_to_cart_form'):
                $form['submit']['#prefix'] = '<div id = "doyourpart">';
                $form['submit']['#suffix'] = '</div>';
                $form['submit']['#type'] = 'image_button';
                $form['submit']['#src'] = drupal_get_path('theme','drivehive') . '/images/doyourpart_cta.gif';
                $form['submit']['#value']  = '';
                break;
            case 'comment_node_event_form':
                $form['actions']['submit']['#value'] = '';
                break;
            case 'webform_client_form_27':
                //$form['actions']['submit']['#type'] = 'image_button';
                //$form['actions']['submit']['#src'] = drupal_get_path('theme','drivehive') . '/images/faq-submit.jpg';
                break;
            case 'mailchimp_lists_user_subscribe_form_3':
                $form['submit']['#type'] = 'image_button';
                $form['submit']['#src'] = drupal_get_path('theme','drivehive') . '/images/mailchimp_submit.gif';
                //$form['mailchimp_lists']['mailchimp_3']['mergevars']['EMAIL']['#size'] = 29;
                $form['mailchimp_lists']['mailchimp_3']['mergevars']['EMAIL']['#attributes'] = array(
                    'onFocus'=>'if (this.value == "ENTER EMAIL ADDRESS") {this.value = "";}',
                    'onBlur'=>'if (this.value == "") {this.value = "ENTER EMAIL ADDRESS";}'
                    );
                $form['mailchimp_lists']['mailchimp_3']['mergevars']['EMAIL']['#default_value'] = 'ENTER EMAIL ADDRESS';
                $form['#prefix'] = '<div id="footer-wrap"><div class="fl">
                    <ul>
                        <li><a href="/current">current event</a></li>
                        <li><a href="/past-events">past events</a></li>
                        <li><a href="/about">about drive hive</a></li>
                        <li><a href="/privacy-policy">privacy &amp; legal</a></li>
                        <li><a href="/news">news</a></li>
                        <li class="last"><a href="/contact-us">Contact US</a></li>
                    </ul>
                    </div><div class="fr">
                        <ul>
                            <li><a href="https://twitter.com/#!/drivehive" id="footer-twitter">twitter</a></li>
                            <li><a href="http://youtube.com/drivehive" id="footer-tube">youtube</a></li>
                            <li><a href="http://www.facebook.com/pages/Drive-Hive" id="footer-fb">facebook</a></li>
                            <li><a href="#" id="footer-in">linkedin</a></li>
                            <li><a href="/rss.xml" id="footer-rss">rss</a></li>
                        </ul>';
                $form['#suffix'] = '</div><!-- /fr --></div>';

                break;
        }
}

function hive_permission() {
  return array(
    'access drivehive' => array(
      'title' => t('Access DriveHive'),
      'description' => t('Basic access to site for anons'),
      'restrict access' => FALSE,
    ),
  );
}
/**
* Implementation of hook_menu()
*/

function hive_menu(){
    $items['event_rss/%'] = array(
    'title' => 'Event Updates',
    'description' => 'Subscibe to this event',
    'page callback' => 'drivehive_event_rss',
    'file' => 'pages.inc',
    'access arguments' => array('access drivehive'),
    'file path' => drupal_get_path('module', 'hive'),
  );
    $items['goal_status/%'] = array(
    'title' => 'Event Updates',
    'description' => 'Goal Status',
    'page callback' => 'drivehive_ajax_goal_status',
    'file' => 'pages.inc',
    'access arguments' => array('access drivehive'),
    'file path' => drupal_get_path('module', 'hive'),
    //'delivery callback' => 'ajax_deliver',
    );

return $items;
}

/**
* function to handle rendering of event sponsors via entity reference.
*/

function drivehive_event_sponsors($nid){
	$output = '';
   // find all the sponsors for this event using the entity reference db table
	$sponsor_nids = db_query("SELECT field_event_sponsors_target_id from {field_data_field_event_sponsors} where entity_id = :nid", array('nid' => $nid));
	$count = 0;
	foreach($sponsor_nids as $key=>$value){
		$sponsor_nid = $value->field_event_sponsors_target_id;
		$sponsor_node = node_load($sponsor_nid);
		$sponsor_img_file = $sponsor_node->field_sponsor_logo['und'][0]['filename'];
		$sponsor_link = $sponsor_node->field_logo_link['und'][0]['value'];

	//	drupal_print($sponsor_node->field_sponsor_logo['und'][0]);
		if(!empty($sponsor_img_file)){
			// swtich between large, small image settings (even, odd), stagger
			if($count == 2){
				$count++;
			}
			if($count % 2 == 0){
				$img_setting = 'sponsor_logo_small';
			}else{
				$img_setting = 'sponsor_logo_large';
			}
			$sponsor_img_uri = $sponsor_node->field_sponsor_logo['und'][0]['uri'];
			$sponsor_img_path = '/sites/default/files/' . $sponsor_img_file;
			$sponsor_img_alt = $sponsor_node->field_sponsor_logo['und'][0]['alt'];
			$sponsor_img_title = $sponsor_node->field_sponsor_logo['und'][0]['title'];
			if(!empty($sponsor_link)){
				$output .= '<a href = "' . $sponsor_link . '">' . theme('image_style', array('style_name' => $img_setting, 'path' => $sponsor_img_uri, 'alt' => 'image alt', 'title' => $sponsor_img_title, )) . '</a>';
			}else{
				$output .= theme('image_style', array('style_name' => $img_setting, 'path' => $sponsor_img_uri, 'alt' => 'image alt', 'title' => $sponsor_img_title, ));
			}
		}
$count++;
	}
	return $output;
}

/*
 * Retrieve the total amount purchased for this event so far.
 */

function drivehive_goal_progress($product_id){
    $query = db_select('field_data_commerce_line_items', 'fdcli');
    $query->leftJoin('field_data_commerce_product', 'fdcp', '(fdcli.commerce_line_items_line_item_id = fdcp.entity_id)');
    $query->leftJoin('commerce_line_item', 'cli', '(fdcp.entity_id = cli.line_item_id)');
    $query->leftJoin('field_data_commerce_total', 'fdct', '(cli.line_item_id = fdct.entity_id)');
    $query->leftJoin('commerce_order', 'co', '(cli.order_id = co.order_id)');
    $query->addExpression('SUM(fdct.commerce_total_amount)', 'total');
    $query->condition('fdcp.commerce_product_product_id', $product_id);
    $query->condition('co.status', 'pending');
    $result = $query->execute()->fetch();
    $amount = empty($result->total) ? 0 : substr($result->total, 0, -2);
    if(arg(0) == 'goal_status'){
        return number_format($amount);
    }else{
        return $amount;
    }
}

function hive_theme() {
    $path = drupal_get_path('module', 'hive');
  return array(
    'test' => array(
      'variables' => array('jarjar' => null), 
      //'path' => $path,
    ),
  );
}

function theme_test($variables){
return 'jarjarbinx!';
}
 
function test_callback(){
    return theme('test', array('jarjar'=>'binx'));
}